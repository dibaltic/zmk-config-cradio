#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <1 8>;
            layers = <0>;
        };

        cword {
            bindings = <&caps_word>;
            key-positions = <2 7>;
            layers = <0>;
        };

        backword {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <31 32>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <28 29>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <26 27>;
            layers = <0>;
        };

        game {
            bindings = <&to 4>;
            key-positions = <30 31>;
            layers = <0>;
        };

        fun {
            bindings = <&mo 3>;
            key-positions = <32 33>;
        };

        lbrac {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <1 11>;
            layers = <0>;
        };

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <2 12>;
            layers = <0>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 13>;
            layers = <0>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <4 14>;
            layers = <0>;
        };

        great {
            bindings = <&kp GREATER_THAN>;
            key-positions = <5 15>;
            layers = <0>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 16>;
            layers = <0>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 17>;
            layers = <0>;
        };

        rbrac {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 18>;
            layers = <0>;
        };

        quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 8>;
            layers = <0>;
        };

        gameEnter {
            bindings = <&kp ENTER>;
            key-positions = <30 31>;
            layers = <4>;
        };

        gameG {
            bindings = <&kp G>;
            key-positions = <4 14>;
            layers = <4>;
        };

        gameB {
            bindings = <&kp B>;
            key-positions = <24 14>;
            layers = <4>;
        };

        bluetooth {
            bindings = <&to 5>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            layers = <0>;
        };

        altf4 {
            bindings = <&kp RA(F4)>;
            key-positions = <8 9>;
            layers = <4>;
        };
    };

    macros {
        homerow: homerow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>, <&kp R>;

            label = "HOMEROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp W             &kp L           &kp Y        &kp P           &kp B        &kp Z        &kp F            &kp O        &kp U            &kp SQT
&mt LEFT_SHIFT C  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_GUI T  &kp G        &kp M        &mt RIGHT_GUI N  &mt RCTRL E  &mt RIGHT_ALT I  &mt RIGHT_SHIFT A
&kp Q             &kp J           &kp V        &kp D           &kp K        &kp X        &kp H            &kp SLASH    &kp COMMA        &kp PERIOD
                                               &mo 1           &kp SPACE    &key_repeat  &mo 2
            >;
        };

        sym {
            bindings = <
&kp LC(Y)  &kp LC(Z)  &kp LC(X)  &kp LA(F4)  &kp DOLLAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &kp SEMICOLON
&kp LG(L)  &kp LC(C)  &kp LC(V)  &kp LC(F)   &kp PERCENT      &kp TILDE             &kp CARET              &kp QUESTION   &kp EXCLAMATION   &kp MINUS
&none      &none      &none      &kp HASH    &kp AMPERSAND    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp FSLH       &kp BACKSLASH     &kp AT_SIGN
                                 &trans      &trans           &kp RIGHT_SHIFT       &trans
            >;
        };

        num {
            bindings = <
&kp C_BRI_UP       &none  &kp UP_ARROW    &none            &kp C_VOLUME_UP      &kp ASTRK      &kp N7        &kp N8        &kp N9        &kp PLUS
&kp C_BRI_DEC                &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_VOLUME_DOWN    &kp KP_DIVIDE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&none                 &none                 &none           &none            &none                &kp NUMBER_0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
                                                            &to 0            &trans               &none     &trans
            >;
        };

        fun {
            bindings = <
&kp F1          &kp F2         &kp F3       &kp F4        &kp F5     &kp F6      &kp F7           &kp F8     &kp F9         &kp F10
&kp LEFT_SHIFT  &kp LEFT_ALT   &kp LCTRL    &kp LEFT_GUI  &kp F11    &kp F12     &kp RIGHT_GUI     &kp RCTRL  &kp RIGHT_ALT  &kp RSHIFT
&kp C_PAUSE     &kp PAGE_DOWN  &kp PAGE_UP  &kp HOME      &kp END    &kp INSERT  &kp PRINTSCREEN  &none      &none          &none
                                            &to 0         &trans     &trans      &trans
            >;
        };

        game {
            bindings = <
&kp T      &kp Q  &kp W  &kp E      &kp R        &kp Y    &kp U  &kp I  &kp O  &kp P
&kp LSHFT  &kp A  &kp S  &kp D      &kp F        &kp H    &kp J  &kp K  &kp L  &kp PRINTSCREEN
&kp TAB    &kp Z  &kp X  &kp C      &kp V        &kp N    &kp M  &none  &none  &kp RIGHT_ALT
                         &kp LCTRL  &kp SPACE    &kp TAB  &to 0
            >;
        };

        bluetooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &none   &none   &none  &none  &none
&none         &none         &bt BT_PRV    &bt BT_NXT      &none           &none   &none   &none  &none  &none
&bootloader   &none         &none         &bt BT_CLR_ALL  &none           &none   &none   &none  &none  &none
                                          &bt BT_CLR      &to 0           &trans  &trans
            >;
        };
    };
};

