// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <1 8>;
            layers = <0>;
        };

        cword {
            bindings = <&caps_word>;
            key-positions = <2 7>;
            layers = <0>;
        };

        backword {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <31 32>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            layers = <0>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <28 29>;
            layers = <0>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <26 27>;
            layers = <0>;
        };

        game {
            bindings = <&to 4>;
            key-positions = <30 31>;
            layers = <0>;
        };

        fun {
            bindings = <&to 3>;
            key-positions = <32 33>;
        };

        lbrac {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <1 11>;
            layers = <0>;
        };

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <2 12>;
            layers = <0>;
        };

        lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 13>;
            layers = <0>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <4 14>;
            layers = <0>;
        };

        great {
            bindings = <&kp GREATER_THAN>;
            key-positions = <5 15>;
            layers = <0>;
        };

        rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 16>;
            layers = <0>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 17>;
            layers = <0>;
        };

        rbrac {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 18>;
            layers = <0>;
        };

        quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 8>;
            layers = <0>;
        };

        gameEnter {
            bindings = <&kp ENTER>;
            key-positions = <30 31>;
            layers = <4>;
        };

        gameG {
            bindings = <&kp G>;
            key-positions = <4 14>;
            layers = <4>;
        };

        gameB {
            bindings = <&kp B>;
            key-positions = <24 14>;
            layers = <4>;
        };

        bluetooth {
            bindings = <&to 5>;
            key-positions = <20 21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp W  &kp L  &kp Y  &kp P  &kp B        &kp Z        &kp F  &kp O      &kp U              &kp SQT
&kp C  &kp R  &kp S  &kp T  &kp G        &kp M        &kp N  &kp E      &mt RIGHT_SHIFT I  &kp A
&kp Q  &kp J  &kp V  &kp D  &kp K        &kp X        &kp H  &kp SLASH  &kp COMMA          &kp PERIOD
                     &mo 1  &kp SPACE    &key_repeat  &mo 2
            >;
        };

        sym {
            bindings = <
&kp PRINTSCREEN  &kp LC(Z)     &kp LC(X)     &kp LA(F4)  &kp DOLLAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &kp SEMICOLON
&kp LCTRL        &kp LEFT_GUI  &kp LEFT_ALT  &kp LC(F)   &kp PERCENT      &kp TILDE             &kp CARET              &kp QUESTION   &kp EXCLAMATION   &kp MINUS
&kp TAB          &kp LG(L)     &kp LC(C)     &kp LC(V)   &kp AMPERSAND    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp FSLH       &kp BACKSLASH     &kp AT_SIGN
                                             &trans      &trans           &kp RIGHT_SHIFT       &trans
            >;
        };

        num {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &kp C_VOLUME_UP      &kp ASTRK      &kp N7        &kp N8        &kp N9        &kp PLUS
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_VOLUME_DOWN    &kp KP_DIVIDE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans  &trans          &trans          &trans           &trans               &kp NUMBER_0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
                                        &to 0            &trans               &kp ENTER      &trans
            >;
        };

        fun {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4     &kp F5     &kp F6   &kp F7     &kp F8    &kp F9    &kp F10
&kp LCTRL  &kp LGUI  &kp LALT  &kp LSHFT  &kp F11    &kp F12  &kp RSHFT  &kp RALT  &kp RGUI  &kp RCTRL
&trans     &trans    &trans    &trans     &trans     &trans   &trans     &trans    &trans    &trans
                               &to 0      &trans     &trans   &trans
            >;
        };

        game {
            bindings = <
&kp T      &kp Q  &kp W  &kp E      &kp R        &kp PRINTSCREEN  &trans   &trans     &trans  &trans
&kp LSHFT  &kp A  &kp S  &kp D      &kp F        &trans           &kp TAB  &kp LCTRL  &trans  &trans
&kp TAB    &kp Z  &kp X  &kp C      &kp V        &trans           &trans   &trans     &trans  &trans
                         &kp LCTRL  &kp SPACE    &kp ENTER        &to 0
            >;
        };

        bluetooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans
&trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans          &trans  &trans  &trans  &trans  &trans
&bootloader   &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans
                                          &bt BT_CLR    &trans          &trans  &trans
            >;
        };
    };
};
     
